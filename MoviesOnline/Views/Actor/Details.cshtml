@model Movie.Entities.Actor

@{
    ViewData["Title"] = "Details";
}
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (ViewContext.HttpContext.User.IsInRole("admin") || (ViewContext.HttpContext.User.IsInRole("editor")))
{
    <h1>Details for Actor</h1>

    <div>
        @*<h4>Actor</h4>
            <hr />*@
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Id)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Id)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Name)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Name)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Country)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Country)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.DateBirth)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.DateBirth)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ShortDescription)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ShortDescription)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Language)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Language)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Gender)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Gender)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Popularity)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Popularity)
            </dd>
        </dl>
    </div>
    <div>
        @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
        <a asp-action="Index">Back to List</a>
    </div>
}
else
{
    <div class="container-fluid" style="background-color: rgba(17, 17, 17,
      0.808); color: rgb(238, 235, 235);">
        <div>
            <div style="display:flex; align-content: center; justify-content: center;">
                @if (Uri.IsWellFormedUriString(Model.PhotoURL, UriKind.Absolute))
                {
                    <img src="@Model.PhotoURL" style="width: 450px; height: 350px; border-radius: 50%;" />
                }
                else
                {
                    <img src="~/ActorPhotos/@Model.PhotoURL" style="width: 450px; height: 350px; border-radius: 50%;" />
                }
            </div>
            <div>
                <h3 class="mt-3"> Date of Birth: &nbsp; @Model.DateBirth </h3>
                <h3 class="mt-3"> Born: &nbsp; @Model.Country </h3>
                <h3 class="mt-3"> Short Description: &nbsp; @Model.ShortDescription </h3>
                <h3 class="mt-3"> Language: &nbsp; @Model.Language </h3>
            </div>
        </div>
    </div>
}
